{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotServices.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","GotService","Object","classCallCheck","this","_apiBase","url","fetch","concat","res","ok","Error","status","json","getRecource","map","_transformCharacter","id","character","_transformHouse","house","_transformBook","book","data","char","name","gender","born","died","culture","region","words","titles","overlord","ancestralWeapons","numberOfPages","publisher","released","Spinner","className","ErrorMessage","Fragment","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","_this","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","console","log","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","_ref","Ul","itemList_templateObject","Li","li","itemList_templateObject2","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","prevProps","charId","foo","bar","_this$state$char","App","showRandomChar","selectedChar","toggleRandomChar","components_randomChar","Container","components_header","Row","Col","lg","size","offset","Button","color","md","itemList","components_charDetails","ReactDOM","render","components_app","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,64BCGxC,IAAMC,EAAcC,IAAOC,IAAVC,KAOXC,EAAcH,IAAOI,GAAVC,KAMXC,EAAcN,IAAOO,GAAVC,KCdFC,ED0BA,WACX,OACIC,EAAAC,EAAAC,cAACb,EAAD,KACIW,EAAAC,EAAAC,cAACT,EAAD,KACIO,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,uBAIJH,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,eAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,WAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,6CE5CCC,aACjB,SAAAA,IAAcC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACVG,KAAKC,SAAW,oIAGFC,yFACIC,MAAK,GAAAC,OAAIJ,KAAKC,UAATG,OAAoBF,eAArCG,UAEEC,yBACE,IAAIC,MAAJ,mBAAAH,OAA6BF,EAA7B,aAAAE,OAA4CC,EAAIG,gCAE7CH,EAAII,2TAICT,KAAKU,YAAY,gDAA7BL,2BACEA,EAAIM,IAAIX,KAAKY,qMAENC,yFACSb,KAAKU,YAAL,eAAAN,OAAgCS,kBAAlDC,2BACCd,KAAKY,oBAAoBE,4QAIdd,KAAKU,YAAY,yBAA7BL,2BACCA,EAAIM,IAAIX,KAAKe,6LAETF,yFACSb,KAAKU,YAAL,WAAAN,OAA4BS,kBAA1CG,2BACChB,KAAKe,gBAAgBC,2QAIVhB,KAAKU,YAAY,wBAA7BL,2BACCA,EAAIM,IAAIX,KAAKiB,2LAEVJ,yFACSb,KAAKU,YAAL,UAAAN,OAA2BS,kBAAxCK,2BACClB,KAAKiB,eAAeC,qIAGzBC,GACE,OAAIA,GAGO,yDAICC,GACZ,MAAO,CACHC,KAAMD,EAAKC,KACXC,OAAQF,EAAKE,OACbC,KAAMH,EAAKG,KACXC,KAAMJ,EAAKI,KACXC,QAASL,EAAKK,iDAIVT,GACZ,MAAM,CACFK,KAAML,EAAMK,KACZK,OAAQV,EAAMU,OACdC,MAAOX,EAAMW,MACbC,OAAQZ,EAAMY,OACdC,SAAUb,EAAMa,SAChBC,iBAAkBd,EAAMc,yDAIjBZ,GACX,MAAM,CACFG,KAAMH,EAAKG,KACXU,cAAeb,EAAKa,cACpBC,UAAWd,EAAKc,UAChBC,SAAUf,EAAKe,mBC1EZC,SCEC,WACZ,OACIzC,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,yCAAwC1C,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,oBACtE1C,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,yCCJlHyC,ECEM,WACjB,OACA3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACI5C,EAAAC,EAAAC,cAAA,OAAK2C,IAAKC,IAAKC,IAAI,UACnB/C,EAAAC,EAAAC,cAAA,sCCDa8C,6MAEjBC,WAAa,IAAIA,IAEjBC,MAAQ,CACJvB,KAAM,GACNwB,SAAS,EACTC,OAAO,KAYXC,aAAe,SAAC1B,GACZ2B,EAAKC,SAAS,CACV5B,OACAwB,SAAS,OAGjBK,QAAU,SAACC,GACPH,EAAKC,SAAS,CACVH,OAAO,EACPD,SAAS,OAIjBO,WAAa,WACT,IAAMtC,EAAKuC,KAAKC,MAAoB,IAAdD,KAAKE,SAAe,IAC1CP,EAAKL,WAAWa,aAAa1C,GACxB2C,KAAKT,EAAKD,cACVW,MAAMV,EAAKE,6FAzBhBjD,KAAKmD,aACLnD,KAAK0D,QAAUC,YAAY3D,KAAKmD,WAAa,oDAI7CS,cAAc5D,KAAK0D,0CAyBnBG,QAAQC,IAAI,UAFP,IAAAC,EAI2B/D,KAAK2C,MAA9BvB,EAJF2C,EAIE3C,KAAMwB,EAJRmB,EAIQnB,QAASC,EAJjBkB,EAIiBlB,MAEhBmB,EAAenB,EAAQpD,EAAAC,EAAAC,cAACsE,EAAD,MAAkB,KACzCC,EAAUtB,EAAUnD,EAAAC,EAAAC,cAACwE,EAAD,MAAa,KACjCC,EAAaxB,GAAWC,EAA8B,KAAtBpD,EAAAC,EAAAC,cAAC0E,EAAD,CAAMjD,KAAMA,IAElD,OACI3B,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,wBACV+B,EACAF,EACAI,UArDuBE,aA2DlCC,EAAO,SAAAC,GAAU,IAARpD,EAAQoD,EAARpD,KAEJC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,OAAQC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,QAEjC,OACIhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACI5C,EAAAC,EAAAC,cAAA,+BAAuB0B,GACvB5B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,+BACV1C,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,WACA1C,EAAAC,EAAAC,cAAA,YAAO2B,IAEX7B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,SACA1C,EAAAC,EAAAC,cAAA,YAAO4B,IAEX9B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,SACA1C,EAAAC,EAAAC,cAAA,YAAO6B,IAEX/B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,YACA1C,EAAAC,EAAAC,cAAA,YAAO8B,OCtFZgB,2TCGf,IAAMgC,EAAK1F,IAAOO,GAAVoF,KAGFC,EAAK5F,IAAO6F,GAAVC,KCNOC,6MDeXpC,WAAY,IAAIA,IAEhBC,MAAO,CACHoC,SAAU,yFAGK,IAAAC,EAAAhF,KACfA,KAAK0C,WAAWuC,mBACXzB,KAAK,SAACuB,GACHC,EAAKhC,SAAS,CACV+B,mDAKJG,GAAI,IAAAC,EAAAnF,KACZ,OAAOkF,EAAIvE,IAAI,SAACyE,EAAMC,GAClB,OACA5F,EAAAC,EAAAC,cAACgF,EAAD,CACAW,IAAOD,EACPE,QAAS,kBAAMJ,EAAKK,MAAMC,eAAe,GAAGJ,KACvCD,EAAK/D,yCAOT,IAEE0D,EAAY/E,KAAK2C,MAAjBoC,SAEP,IAAKA,EACD,OAAOtF,EAAAC,EAAAC,cAACwE,EAAD,MAIX,IAAMuB,EAAQ1F,KAAK2F,YAAYZ,GAE/B,OACItF,EAAAC,EAAAC,cAAC8E,EAAD,KACKiB,UA3CqBpB,aEdvBsB,oNCIXlD,WAAY,IAAIA,IAEhBC,MAAO,CACHvB,KAAM,yFAINpB,KAAKmD,wDAGU0C,GACX7F,KAAKwF,MAAMM,SAAWD,EAAUC,QAChC9F,KAAKmD,kDAID,IAAA6B,EAAAhF,KACD8F,EAAU9F,KAAKwF,MAAfM,OACHA,IAIJ9F,KAAK0C,WAAWa,aAAauC,GAC5BtC,KAAK,SAACpC,GACH4D,EAAKhC,SAAS,CAAC5B,WAGnBpB,KAAK+F,IAAIC,IAAM,oCAKf,IAAKhG,KAAK2C,MAAMvB,KACZ,OAAO3B,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,gBAAhB,6BAHN,IAAA8D,EAMuCjG,KAAK2C,MAAMvB,KAAhDC,EANF4E,EAME5E,KAAMC,EANR2E,EAMQ3E,OAAQC,EANhB0E,EAMgB1E,KAAMC,EANtByE,EAMsBzE,KAAMC,EAN5BwE,EAM4BxE,QAEjC,OACIhC,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,wBACX1C,EAAAC,EAAAC,cAAA,UAAK0B,GACL5B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,+BACV1C,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,UACA1C,EAAAC,EAAAC,cAAA,YAAO2B,IAEX7B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,QACA1C,EAAAC,EAAAC,cAAA,YAAO4B,IAEX9B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,QACA1C,EAAAC,EAAAC,cAAA,YAAO6B,IAEX/B,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,kDACV1C,EAAAC,EAAAC,cAAA,QAAMwC,UAAU,QAAhB,WACA1C,EAAAC,EAAAC,cAAA,YAAO8B,aA1DU6C,cCD1B4B,oNCUXvD,MAAQ,CACJwD,gBAAgB,EAChBC,aAAc,OAGlBC,iBAAmB,WACftD,EAAKC,SAAS,SAACL,GACX,MAAO,CACHwD,gBAAiBxD,EAAMwD,qBAKnCV,eAAiB,SAAC5E,GACdkC,EAAKC,SAAS,CACVoD,aAAcvF,6EAKlB,IAAMO,EAAOpB,KAAK2C,MAAMwD,eAAiB1G,EAAAC,EAAAC,cAAC2G,EAAD,MAAgB,KAEzD,OAEA7G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACI5C,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACI9G,EAAAC,EAAAC,cAAC6G,EAAD,OAEJ/G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACI9G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,OAAQ,IACtBzF,EACD3B,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAQ3E,UAAW,aAAa4E,MAAM,OAAOxB,QAASvF,KAAKqG,kBAA3D,+BAGR5G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAKM,GAAG,KACJvH,EAAAC,EAAAC,cAACsH,EAAD,CAAUxB,eAAgBzF,KAAKyF,kBAEnChG,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAKM,GAAG,KACJvH,EAAAC,EAAAC,cAACuH,EAAD,CAAapB,OAAQ9F,KAAK2C,MAAMyD,0BAzCvB9B,0BCJjC6C,IAASC,OAAO3H,EAAAC,EAAAC,cAAC0H,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3b1ce95a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.22389cf4.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.h3`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <a href=\"#\">\r\n                Game of Thrones DB\r\n                </a>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <a href=\"#\">Characters</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Houses</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Books</a>   \r\n                </li>\r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;","import Header from './header';\r\n\r\nexport default Header;","export default class GotService {\r\n    constructor(){\r\n        this._apiBase = 'https://anapioficeandfire.com/api';\r\n    }\r\n\r\n    async getRecource(url){\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${url} recived ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async getAllCharacters(){\r\n        const res = await this.getRecource('/characters?page=5&pageSize=10');\r\n        return  res.map(this._transformCharacter)\r\n    }\r\n    async getCharacter(id){\r\n        const character = await this.getRecource(`/characters/${id}`);\r\n        return this._transformCharacter(character);\r\n    }\r\n\r\n    async getAllHouses(){\r\n        const res = await this.getRecource('/houses')\r\n        return res.map(this._transformHouse)\r\n    }\r\n    async getHouse(id){\r\n        const house = await this.getRecource(`/houses/${id}`);\r\n        return this._transformHouse(house);\r\n    }\r\n\r\n    async getAllBooks(){\r\n        const res = await this.getRecource('/books')\r\n        return res.map(this._transformBook)\r\n    }\r\n    async getBook(id){\r\n        const book = await this.getRecource(`/books/${id}`);\r\n        return this._transformBook(book);\r\n    }\r\n\r\n    isSet(data) {\r\n            if (data) {\r\n                return data\r\n            } else {\r\n                return 'no data :('\r\n            }\r\n        }\r\n\r\n    _transformCharacter(char) {\r\n            return {\r\n                name: char.name,\r\n                gender: char.gender,\r\n                born: char.born,\r\n                died: char.died, \r\n                culture: char.culture\r\n            };\r\n    }\r\n\r\n    _transformHouse(house){\r\n        return{\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overlord: house.overlord,\r\n            ancestralWeapons: house.ancestralWeapons\r\n        }        \r\n    }\r\n\r\n    _transformBook(book){\r\n        return{\r\n            name: book.name,\r\n            numberOfPages: book.numberOfPages,\r\n            publisher: book.publisher,\r\n            released: book.released\r\n            }\r\n    }\r\n\r\n}\r\n\r\n/*name: this.isSet(char.name),\r\n                gender: this.isSet(char.gender),\r\n                born: this.isSet(char.born),\r\n                died: this.isSet(char.died), \r\n                culture: this.isSet(char.culture)*/","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ()=>{\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-btpzqmrb0bq\"><div className=\"ldio-sxuoj6y5wfa\">\r\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div></div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Spinner;\r\n\r\n\r\n\r\n","import ErrorMessage from './errorMessage';\r\n\r\nexport default ErrorMessage;","import React from 'react'\r\nimport './errorMessage.css'\r\nimport img from './error.jpg'\r\n\r\nconst ErrorMessage = ()=> {\r\n    return (\r\n    <>\r\n        <img src={img} alt='error'></img>\r\n        <span>Something goes wrong</span>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessage;\r\n\r\n//<img src={process.env.PUBLIC_URL + '/img/error.jpg'} alt='error'></img> \r\n// альтернативный вариант, если картинка в папке public","import React, {Component} from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotServices';\r\nimport Spinner from '../spinner'\r\nimport ErrorMessage from  '../errorMessage'\r\n\r\n\r\nexport default class RandomChar extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateChar();\r\n        this.timerId = setInterval(this.updateChar , 3000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    onCharLoaded = (char)=> {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n    })}\r\n\r\n    onError = (err)=> {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random()*140 + 25); // 25 - 140 персонаж\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('render');\r\n\r\n        const {char, loading, error } = this.state;\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content  = !(loading || error)? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className='random-block rounded'>\r\n                {spinner}\r\n                {errorMessage}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({char})=>{\r\n\r\n    const {name, gender, born, died, culture} = char;\r\n\r\n    return(\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}","import RandomChar from './randomChar';\r\n\r\nexport default RandomChar;","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport gotService from '../../services/gotServices';\r\nimport Spinner from '../spinner';\r\n\r\nconst Ul = styled.ul`\r\n        cursor: pointer;\r\n`;\r\nconst Li = styled.li`\r\n        cursor: pointer;\r\n        padding: 0.75rem 1.25rem;\r\n        background-color: #fff;\r\n        border: 1px solid rgba(0, 0, 0, 0.125);\r\n`;\r\n\r\nexport default class ItemList extends Component {\r\n\r\n    gotService =new gotService();\r\n\r\n    state= {\r\n        charList: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.gotService.getAllCharacters()\r\n            .then((charList)=>{\r\n                this.setState({\r\n                    charList\r\n                })\r\n            })\r\n    }\r\n\r\n    renderItems(arr){\r\n        return arr.map((item, i) => { \r\n            return(\r\n            <Li \r\n            key = {i}\r\n            onClick={() => this.props.onCharSelected(41+i)}>\r\n                {item.name}\r\n            </Li>\r\n        )\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {charList} = this.state;\r\n\r\n        if (!charList){ \r\n            return <Spinner/>\r\n\r\n        }\r\n\r\n        const items = this.renderItems(charList);\r\n\r\n        return (\r\n            <Ul>\r\n                {items}\r\n            </Ul>\r\n        );\r\n    }\r\n}","import ItemList from './itemList';\r\n\r\nexport default ItemList;","import CharDetails from './charDetails';\r\nexport default CharDetails;","import React, {Component} from 'react';\r\nimport './charDetails.css';\r\nimport gotService from '../../services/gotServices';\r\nexport default class CharDetails extends Component {\r\n\r\n    gotService =new gotService();\r\n\r\n    state= {\r\n        char: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateChar()\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.charId !== prevProps.charId){\r\n            this.updateChar();\r\n        }\r\n    }\r\n\r\n    updateChar(){\r\n        const {charId} = this.props;\r\n        if(!charId){\r\n            return\r\n        }\r\n\r\n        this.gotService.getCharacter(charId)\r\n        .then((char)=>{\r\n            this.setState({char})\r\n        })\r\n        \r\n        this.foo.bar = 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.char){\r\n            return <span className='select-error'>Please select a character</span>\r\n        }\r\n\r\n        const {name, gender, born, died, culture} = this.state.char;\r\n\r\n        return (\r\n            <div className=\"char-details rounded\">\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Gender</span>\r\n                        <span>{gender}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Born</span>\r\n                        <span>{born}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Died</span>\r\n                        <span>{died}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Culture</span>\r\n                        <span>{culture}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport {Col, Row, Container, Button} from 'reactstrap';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport ItemList from '../itemList';\r\nimport CharDetails from '../charDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport './app.css'\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        showRandomChar: true,\r\n        selectedChar: 130\r\n    }\r\n\r\n    toggleRandomChar = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                showRandomChar: !state.showRandomChar\r\n            }\r\n        });\r\n    }\r\n\r\n    onCharSelected = (id)=>{\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\r\n        \r\n        return (\r\n        \r\n        <> \r\n            <Container>\r\n                <Header />\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={{size: 5, offset: 0}}>\r\n                        {char}\r\n                        <Button className ='toggle-btn' color=\"info\" onClick={this.toggleRandomChar}> Toggle random character </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md='6'>\r\n                        <ItemList onCharSelected={this.onCharSelected}/>\r\n                    </Col>\r\n                    <Col md='6'>\r\n                        <CharDetails charId={this.state.selectedChar}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );}\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport GotServices from 'C:/Users/stepa/Desktop/Степа/Learning/React/advanced/react-gotapp/src/services/gotServices.js'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}